<!DOCTYPE html>
<html>
    <head>
        <title>Upshot Scenario Samples</title>
        <link href="Styles/scenarios.css" rel="stylesheet" type="text/css" />
        <script src="http://ajax.microsoft.com/ajax/jquery/jquery-1.6.2.js" type="text/javascript"></script>
        <script src="Scripts/knockout-2.0.0.js" type="text/javascript"></script>
        <script src="Scripts/UpshotScripts/upshot.js" type="text/javascript"></script>
        <script src="Scripts/UpshotScripts/Upshot.Compat.Knockout.js" type="text/javascript"></script>
        <script src="Scripts/constants.js" type="text/javascript"></script>
        <script type="text/javascript">
            $(function () {
                var dataSource = upshot.RemoteDataSource({
                    providerParameters: { url: constants.serviceUrl, operationName: "GetProducts" },
                    provider: constants.provider,
                    entityType: "Product:#Sample.Models"
                }).refresh();

                function AppViewModel(dataSource) {
                    var self = this;

                    // Data
                    self.products = dataSource.getEntities();
                    self.errorText = ko.observable();

                    // Operations
                    self.retry = function () {
                        self.errorText(null);
                        dataSource.refresh();
                    }

                    dataSource.bind("refreshError", function (httpStatus, msg) {
                        self.errorText(msg) 
                    });
                };

                ko.applyBindings(new AppViewModel(dataSource));
            });
        </script>
    </head>
    <body>
        <a href="index.htm">&laquo; Home</a> |
        <a href="ko2-pagesortfilter.htm">Next &raquo;</a>

        <p>
            <b>Scenario:</b> Demonstrates how to use a data view to retrieve list data asynchronously 
            via HTTP GET and visualize the result in an HTML table, with error handling.
        </p>

        <table>
            <caption>Product Inventory Table</caption>
            <tr>
                <th>Manufacturer</th>
                <th>Name</th>
                <th>Price</th>
                <th>Rating</th>
            </tr>
            <tbody data-bind="foreach: products">
                <tr class="product">
                    <td data-bind="text: Manufacturer"></td>
                    <td data-bind="text: Name" class="name"></td>
                    <td data-bind="text: '$' + Price().toFixed(2)" class="price"></td>
                    <td data-bind="text: Rating"></td>
                </tr>
            </tbody>
        </table>

        <div class="error" data-bind="visible: errorText">
            <p>Error: <span data-bind="text: errorText"></span></p>
            <button data-bind="click: retry">Retry</button>
        </div>
    </body>
</html>