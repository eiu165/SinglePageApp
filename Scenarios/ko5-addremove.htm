<!DOCTYPE html>
<html>
    <head>
        <title>Upshot Scenario Samples</title>
        <link href="Styles/scenarios.css" rel="stylesheet" type="text/css" />
        <style type="text/css">label.error { display: block }</style>
        <script src="http://ajax.microsoft.com/ajax/jquery/jquery-1.6.2.js" type="text/javascript"></script>
        <script src="http://ajax.microsoft.com/ajax/jquery.validate/1.8.1/jquery.validate.js" type="text/javascript"></script>
        <script src="Scripts/knockout-2.0.0.js" type="text/javascript"></script>
        <script src="Scripts/UpshotScripts/upshot.js" type="text/javascript"></script>
        <script src="Scripts/UpshotScripts/Upshot.Compat.Knockout.js" type="text/javascript"></script>
        <script src="Scripts/bindings.js" type="text/javascript"></script>
        <script src="Scripts/constants.js" type="text/javascript"></script>
        <script type="text/javascript">
            $(function () {
                function Product(properties) {
                    var self = this;
                    properties = properties || {};
                    self.Name = ko.observable(properties.Name);
                    self.ID = ko.observable(properties.ID || 0); // Todo: remove the "|| 0" after fixing issue #179 (i.e., when ID is no longer a required field)
                    self.Manufacturer = ko.observable(properties.Manufacturer);
                    self.Rating = ko.observable(properties.Rating);
                    self.Price = ko.observable(properties.Price);
                    self.ProductDescription = ko.observable(properties.ProductDescription);
                    upshot.addEntityProperties(this); // add properties managed by upshot

                    self.FormattedPrice = ko.computed(function () {
                        return '$' + Number(self.Price()).toFixed(2);
                    });
                };

                // Bind array with data source and refresh.
                var dataSource = upshot.RemoteDataSource({
                    providerParameters: { url: constants.serviceUrl, operationName: "GetProducts" },
                    provider: constants.provider,
                    entityType: "Product:#Sample.Models",
                    mapping: Product
                }).refresh();

                var AppViewModel = function (dataSource) {
                    var self = this;
                    var handleSubmit = function () {
                        self.products.unshift(self.newProduct()); // Add new product to data source
                        self.newProduct(new Product())            // Revert form to blank state
                    }

                    // Public data properties
                    self.products = dataSource.getEntities();
                    self.newProduct = ko.observable(new Product());
                    self.validationConfig = $.extend({}, dataSource.getEntityValidationRules(), {
                        submitHandler: handleSubmit
                    });

                    // Public operations
                    self.removeProduct = function (product) {
                        dataSource.deleteEntity(product);
                    };
                };

                ko.applyBindings(new AppViewModel(dataSource));
            });
        </script>
    </head>
    <body>
        <a href="index.htm">&laquo; Home</a>
        <p>
            <b>Scenario:</b> This sample demonstrates adding and removing data entities from a list.
        </p>

        <form data-bind="validate: validationConfig, with: newProduct">
            <fieldset>
                <table>
                    <caption>Product Information</caption>
                    <tr>
                        <th>Name</th>
                        <td><input data-bind="value: Name, autovalidate: true" name="Name" /></td>
                    </tr>
                    <tr>
                        <th>Manufacturer</th>
                        <td><input data-bind="value: Manufacturer, autovalidate: true" name="Manufacturer" /></td>
                    </tr>
                    <tr>
                        <th>Rating</th>
                        <td><input data-bind="value: Rating, autovalidate: true" name="Rating" /></td>
                    </tr>
                    <tr>
                        <th>Price</th>
                        <td><input data-bind="value: Price, autovalidate: true" name="Price" /></td>
                    </tr>
                    <tr>
                        <th>Description</th>
                        <td><input data-bind="value: ProductDescription, autovalidate: true" name="ProductDescription" /></td>
                    </tr>
                    <tr>
                        <th>Action</th>
                        <td><button class="addButton" type="submit">add</button></td>
                    </tr>
                </table>
            </fieldset>
        </form>
    
        <table>
            <caption>Product Inventory Table</caption>
            <tr>
                <th>Manufacturer</th>
                <th>Name</th>
                <th>Price</th>
                <th>Rating</th>
                <th>Action</th>
            </tr>
            <tbody data-bind="foreach: products">
                <tr class="product" data-bind="css: { updating: IsChanged }">
                    <td data-bind="text: Manufacturer"></td>
                    <td class="name"><span data-bind="text: Name"></span></td>
                    <td data-bind="text: FormattedPrice" class="price"></td>
                    <td data-bind="text: Rating"></td>
                    <td><button class="removeButton" data-bind="click: $parent.removeProduct">remove</button></td>
                </tr>
            </tbody>
        </table>
    </body>
</html>